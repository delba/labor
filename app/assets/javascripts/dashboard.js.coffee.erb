$ ->
  employeeTemplate = (employee) ->
    """
      <table>
        <tbody>
          <tr>
            <th>Name</th>
            <td>#{employee.first_name} #{employee.last_name}</td>
          </tr>
          <tr>
            <th>Address</th>
            <td>#{employee.street} #{employee.zip} #{employee.city}</td>
          </tr>
          <tr>
            <th>Phone</th>
            <td>#{employee.phone}</td>
          </tr>
          <tr>
            <th>Email</th>
            <td>#{employee.email}</td>
          </tr>
        </tbody>
      </table>
    """

  featureCollection =
    type: 'FeatureCollection'
    features: for employee in employees
      type: 'Feature'
      geometry:
        type: 'Point'
        coordinates: [employee.longitude, employee.latitude]
      properties: employee

  geoJson = L.geoJson featureCollection,
    onEachFeature: (feature, layer) ->
      layer.bindPopup employeeTemplate(feature.properties)

  geoJson.findByFeatureId = (id) ->
    id = parseInt(id)

    for layer in @getLayers()
      if layer.feature.properties.id is id
        return layer

  bounds = geoJson.getBounds()

  map = L.mapbox.map('map', '<%= ENV['MAP_ID'] %>',
          attributionControl: false
        ).fitBounds(bounds)

  geoJson.addTo map

  $(document).on 'click', 'ul.employees li a', (e) ->
    e.preventDefault()

    id = $(this).data('id')
    layer = geoJson.findByFeatureId(id).openPopup()
    map.setView(layer.getLatLng(), 13)
